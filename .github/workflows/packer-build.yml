---

name: Packer

on:
  push:
    #paths:
    #  - 03.packer/*

jobs:
  DeployDev:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    name: Deploy to Dev
    #if: github.event_name == 'pull_request'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Retrieve Secrets from HashiCorp Vault
        id: secrets
        uses: hashicorp/vault-action@v2.4.0
        with:
          url: https://hcp-vault-cluster-public-vault-e5830e3d.85b50f4b.z1.hashicorp.cloud:8200
          exportToken: true
          namespace: admin
          method: jwt
          role: github-actions
          secrets: |
            cloud-secrets/data/tfc-secret TFC_TOKEN | TFC_TOKEN ;
            azure/creds/dev client_id | ARM_CLIENT_ID ;
            azure/creds/dev client_secret | ARM_CLIENT_SECRET 

      - name: Sleep for 30 seconds
        run: sleep 30s
        shell: bash

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ steps.secrets.outputs.TFC_TOKEN }}
          cli_config_credentials_hostname: 'app.terraform.io'
        env:
          ARM_CLIENT_ID: ${{ steps.secrets.outputs.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ steps.secrets.outputs.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: "ef738ee8-d657-4262-9b0d-c09dd4c2ec68"
          ARM_TENANT_ID: "71551aaf-eb3b-4c79-b082-e2be0e38affa"

      - name: Terraform Init
        run: terraform init -input=false
        env:
          TF_WORKSPACE: "azure-infra-dev"
          TF_IN_AUTOMATION: "true"

      - name: Terraform Format
        run: terraform fmt

      - name: Terraform Plan
        run: terraform plan -input=false
        env:
          TF_WORKSPACE: "azure-infra-dev"
          TF_IN_AUTOMATION: "true"

      - name: Terraform Apply
        run: terraform apply -input=false
        env:
          TF_WORKSPACE: "azure-infra-dev"
          TF_IN_AUTOMATION: "true"
            
